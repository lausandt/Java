Tree ADT Type


position -> abstraction for a node of the tree. 

At each position an element is stored and positions satisfy parent child relationships that define the tree

getElement(): 	Returns the element stored at this position

accessors

root():			Returns the position of the root of the tree (or null if the tree is empty)

parent(p):		Returns the position of the parent of position p

children(p):	Returns an iterable collection containing the children of position p (if any)

numChildren(p): 	Returns the number of children of position p

If a tree T is ordered then children(p) reports the childeen in order

query methods (useful in while & if statements)

isInternal(p):	Returns true if position p has at least one child

isExternal(p): 	Returns true if position p has no children 

isRoot(p):		Returns true if position p is the root of the tree

general methods (unrelated to the structure of the tree)

size():			Returns the number of position (thus elements) in the tree

isEmpty():		Returns true if the tree contains no positions (no elements) 	 

iterator():		Returns an iterator for all elements in the tree (so that the tree itself is iterable)

positions(): returns an interable collection of all positions of the tree

Warnings:

if an invalid position is sent as a parameter to any method of a tree, then an IllegaArgumentException is thrown
